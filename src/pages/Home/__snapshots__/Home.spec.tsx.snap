// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Home Component renders empty list message when no products are available 1`] = `
<View
  collapsable={false}
  pointerEvents="box-none"
  style={
    {
      "flex": 1,
    }
  }
>
  <RCTSafeAreaView
    style={
      {
        "flex": 1,
      }
    }
  >
    <View
      style={
        {
          "alignItems": "center",
          "backgroundColor": "#f5f5f5",
          "borderBottomColor": "#e0e0e0",
          "borderBottomWidth": 1,
          "flexDirection": "row",
          "justifyContent": "space-between",
          "paddingHorizontal": 16,
          "paddingVertical": 12,
        }
      }
    >
      <Text
        style={
          {
            "color": "#333333",
            "fontFamily": "Roboto",
            "fontSize": 24,
            "fontWeight": "bold",
          }
        }
      >
        ProductsApp
      </Text>
      <View
        accessibilityState={
          {
            "busy": undefined,
            "checked": undefined,
            "disabled": undefined,
            "expanded": undefined,
            "selected": undefined,
          }
        }
        accessibilityValue={
          {
            "max": undefined,
            "min": undefined,
            "now": undefined,
            "text": undefined,
          }
        }
        accessible={true}
        collapsable={false}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          {
            "justifyContent": "center",
            "opacity": 1,
          }
        }
      >
        <Text>
          <Text>
            Filter
          </Text>
        </Text>
      </View>
      <View>
        <View
          accessibilityState={
            {
              "busy": undefined,
              "checked": undefined,
              "disabled": undefined,
              "expanded": undefined,
              "selected": undefined,
            }
          }
          accessibilityValue={
            {
              "max": undefined,
              "min": undefined,
              "now": undefined,
              "text": undefined,
            }
          }
          accessible={true}
          collapsable={false}
          focusable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            {
              "justifyContent": "center",
              "opacity": 1,
            }
          }
        >
          <Text>
            <Text>
              Sort
            </Text>
          </Text>
        </View>
      </View>
    </View>
    <View
      style={
        {
          "backgroundColor": "#f5f5f5",
          "flex": 1,
          "padding": 16,
        }
      }
    >
      <RCTScrollView
        ListEmptyComponent={[Function]}
        ListFooterComponent={[Function]}
        contentContainerStyle={
          {
            "flexGrow": 1,
          }
        }
        data={[]}
        getItem={[Function]}
        getItemCount={[Function]}
        keyExtractor={[Function]}
        onContentSizeChange={[Function]}
        onEndReached={[Function]}
        onEndReachedThreshold={0.1}
        onLayout={[Function]}
        onMomentumScrollBegin={[Function]}
        onMomentumScrollEnd={[Function]}
        onScroll={[Function]}
        onScrollBeginDrag={[Function]}
        onScrollEndDrag={[Function]}
        removeClippedSubviews={false}
        renderItem={[Function]}
        scrollEventThrottle={0.0001}
        stickyHeaderIndices={[]}
        testID="product-list"
        viewabilityConfigCallbackPairs={[]}
      >
        <View>
          <View
            style={
              {
                "alignItems": "center",
                "flex": 1,
                "justifyContent": "center",
                "padding": 16,
              }
            }
          >
            <Text
              style={
                {
                  "color": "#888",
                  "fontSize": 16,
                  "textAlign": "center",
                }
              }
            >
              No products available
            </Text>
          </View>
          <View
            onLayout={[Function]}
          />
        </View>
      </RCTScrollView>
    </View>
  </RCTSafeAreaView>
</View>
`;

exports[`Home Component renders error state 1`] = `
<View
  collapsable={false}
  pointerEvents="box-none"
  style={
    {
      "flex": 1,
    }
  }
>
  <View
    style={
      {
        "alignItems": "center",
        "backgroundColor": "#F9F9F9",
        "flex": 1,
        "justifyContent": "center",
      }
    }
  >
    <Text
      allowFontScaling={false}
      selectable={false}
      style={
        [
          {
            "color": "#D32F2F",
            "fontSize": 80,
          },
          undefined,
          {
            "fontFamily": "Material Design Icons",
            "fontStyle": "normal",
            "fontWeight": "normal",
          },
          {},
        ]
      }
    >
      ó°—–
    </Text>
    <Text
      style={
        {
          "color": "#333",
          "fontSize": 24,
          "fontWeight": "bold",
          "marginBottom": 8,
          "marginTop": 16,
        }
      }
    >
      Something Went Wrong
    </Text>
    <Text
      style={
        {
          "color": "##7d7c7c",
          "fontSize": 16,
          "marginBottom": 24,
          "paddingHorizontal": 16,
          "textAlign": "center",
        }
      }
    >
      Please check your connection and try again
    </Text>
    <Text
      style={
        {
          "color": "##7d7c7c",
          "fontSize": 16,
          "marginBottom": 24,
          "paddingHorizontal": 16,
          "textAlign": "center",
        }
      }
    >
      Products
    </Text>
    <View
      accessibilityState={
        {
          "busy": undefined,
          "checked": undefined,
          "disabled": undefined,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessibilityValue={
        {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        {
          "alignItems": "center",
          "backgroundColor": "#6200EE",
          "borderRadius": 4,
          "height": undefined,
          "justifyContent": "center",
          "marginHorizontal": 8,
          "opacity": 1,
          "width": undefined,
        }
      }
    >
      <Text>
        <Text>
          Retry
        </Text>
      </Text>
    </View>
  </View>
</View>
`;

exports[`Home Component renders loading state 1`] = `
<View
  collapsable={false}
  pointerEvents="box-none"
  style={
    {
      "flex": 1,
    }
  }
>
  <View
    style={
      {
        "alignItems": "center",
        "backgroundColor": "#f5f5f5",
        "flex": 1,
        "justifyContent": "center",
        "padding": 16,
      }
    }
    testID="loading-container"
  >
    <ActivityIndicator
      color="#6200ee"
      size="large"
    />
    <Text>
      Loading Products
    </Text>
  </View>
</View>
`;

exports[`Home Component renders products correctly 1`] = `
<View
  collapsable={false}
  pointerEvents="box-none"
  style={
    {
      "flex": 1,
    }
  }
>
  <RCTSafeAreaView
    style={
      {
        "flex": 1,
      }
    }
  >
    <View
      style={
        {
          "alignItems": "center",
          "backgroundColor": "#f5f5f5",
          "borderBottomColor": "#e0e0e0",
          "borderBottomWidth": 1,
          "flexDirection": "row",
          "justifyContent": "space-between",
          "paddingHorizontal": 16,
          "paddingVertical": 12,
        }
      }
    >
      <Text
        style={
          {
            "color": "#333333",
            "fontFamily": "Roboto",
            "fontSize": 24,
            "fontWeight": "bold",
          }
        }
      >
        ProductsApp
      </Text>
      <View
        accessibilityState={
          {
            "busy": undefined,
            "checked": undefined,
            "disabled": undefined,
            "expanded": undefined,
            "selected": undefined,
          }
        }
        accessibilityValue={
          {
            "max": undefined,
            "min": undefined,
            "now": undefined,
            "text": undefined,
          }
        }
        accessible={true}
        collapsable={false}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          {
            "justifyContent": "center",
            "opacity": 1,
          }
        }
      >
        <Text>
          <Text>
            Filter
          </Text>
        </Text>
      </View>
      <View>
        <View
          accessibilityState={
            {
              "busy": undefined,
              "checked": undefined,
              "disabled": undefined,
              "expanded": undefined,
              "selected": undefined,
            }
          }
          accessibilityValue={
            {
              "max": undefined,
              "min": undefined,
              "now": undefined,
              "text": undefined,
            }
          }
          accessible={true}
          collapsable={false}
          focusable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            {
              "justifyContent": "center",
              "opacity": 1,
            }
          }
        >
          <Text>
            <Text>
              Sort
            </Text>
          </Text>
        </View>
      </View>
    </View>
    <View
      style={
        {
          "backgroundColor": "#f5f5f5",
          "flex": 1,
          "padding": 16,
        }
      }
    >
      <RCTScrollView
        ListEmptyComponent={[Function]}
        ListFooterComponent={[Function]}
        contentContainerStyle={
          {
            "flexGrow": 1,
          }
        }
        data={
          [
            {
              "id": 1,
              "price": 19.99,
              "thumbnail": "https://example.com/1.jpg",
              "title": "Product 1",
            },
            {
              "id": 2,
              "price": 29.99,
              "thumbnail": "https://example.com/2.jpg",
              "title": "Product 2",
            },
          ]
        }
        getItem={[Function]}
        getItemCount={[Function]}
        keyExtractor={[Function]}
        onContentSizeChange={[Function]}
        onEndReached={[Function]}
        onEndReachedThreshold={0.1}
        onLayout={[Function]}
        onMomentumScrollBegin={[Function]}
        onMomentumScrollEnd={[Function]}
        onScroll={[Function]}
        onScrollBeginDrag={[Function]}
        onScrollEndDrag={[Function]}
        removeClippedSubviews={false}
        renderItem={[Function]}
        scrollEventThrottle={0.0001}
        stickyHeaderIndices={[]}
        testID="product-list"
        viewabilityConfigCallbackPairs={[]}
      >
        <View>
          <View
            onFocusCapture={[Function]}
            onLayout={[Function]}
            style={null}
          >
            <View
              accessibilityState={
                {
                  "busy": undefined,
                  "checked": undefined,
                  "disabled": undefined,
                  "expanded": undefined,
                  "selected": undefined,
                }
              }
              accessibilityValue={
                {
                  "max": undefined,
                  "min": undefined,
                  "now": undefined,
                  "text": undefined,
                }
              }
              accessible={true}
              collapsable={false}
              focusable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                {
                  "opacity": 1,
                }
              }
            >
              <View
                collapsable={false}
                style={
                  {
                    "backgroundColor": "rgba(247, 243, 249, 1)",
                    "borderRadius": 8,
                    "marginBottom": 16,
                    "shadowColor": "#000",
                    "shadowOffset": {
                      "height": 1,
                      "width": 0,
                    },
                    "shadowOpacity": 0.15,
                    "shadowRadius": 3,
                  }
                }
                testID="card-container-outer-layer"
              >
                <View
                  collapsable={false}
                  style={
                    {
                      "backgroundColor": "rgba(247, 243, 249, 1)",
                      "borderRadius": 8,
                      "elevation": 3,
                      "flex": undefined,
                      "shadowColor": "#000",
                      "shadowOffset": {
                        "height": 1,
                        "width": 0,
                      },
                      "shadowOpacity": 0.3,
                      "shadowRadius": 1,
                    }
                  }
                  testID="card-container"
                >
                  <View
                    style={
                      [
                        {
                          "flexShrink": 1,
                        },
                        undefined,
                      ]
                    }
                    testID="card"
                  >
                    <View
                      borderRadiusStyles={
                        {
                          "borderRadius": 8,
                        }
                      }
                      style={
                        [
                          {
                            "paddingHorizontal": 16,
                          },
                          {
                            "paddingVertical": 16,
                          },
                          {
                            "alignItems": "center",
                            "flexDirection": "row",
                          },
                        ]
                      }
                    >
                      <View
                        style={
                          [
                            {
                              "overflow": "hidden",
                            },
                            {
                              "borderRadius": 25,
                              "height": 64,
                              "marginRight": 10,
                              "width": 64,
                            },
                          ]
                        }
                      >
                        <FastImageView
                          defaultSource={null}
                          resizeMode="contain"
                          source={
                            {
                              "priority": "normal",
                              "uri": "https://example.com/1.jpg",
                            }
                          }
                          style={
                            {
                              "bottom": 0,
                              "left": 0,
                              "position": "absolute",
                              "right": 0,
                              "top": 0,
                            }
                          }
                          testID="image-thumbnail-container"
                        />
                      </View>
                      <View
                        style={
                          {
                            "flex": 1,
                            "justifyContent": "center",
                          }
                        }
                      >
                        <Text>
                          Product 1
                        </Text>
                        <Text>
                          $
                          19.99
                        </Text>
                      </View>
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </View>
          <View
            onFocusCapture={[Function]}
            onLayout={[Function]}
            style={null}
          >
            <View
              accessibilityState={
                {
                  "busy": undefined,
                  "checked": undefined,
                  "disabled": undefined,
                  "expanded": undefined,
                  "selected": undefined,
                }
              }
              accessibilityValue={
                {
                  "max": undefined,
                  "min": undefined,
                  "now": undefined,
                  "text": undefined,
                }
              }
              accessible={true}
              collapsable={false}
              focusable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                {
                  "opacity": 1,
                }
              }
            >
              <View
                collapsable={false}
                style={
                  {
                    "backgroundColor": "rgba(247, 243, 249, 1)",
                    "borderRadius": 8,
                    "marginBottom": 16,
                    "shadowColor": "#000",
                    "shadowOffset": {
                      "height": 1,
                      "width": 0,
                    },
                    "shadowOpacity": 0.15,
                    "shadowRadius": 3,
                  }
                }
                testID="card-container-outer-layer"
              >
                <View
                  collapsable={false}
                  style={
                    {
                      "backgroundColor": "rgba(247, 243, 249, 1)",
                      "borderRadius": 8,
                      "elevation": 3,
                      "flex": undefined,
                      "shadowColor": "#000",
                      "shadowOffset": {
                        "height": 1,
                        "width": 0,
                      },
                      "shadowOpacity": 0.3,
                      "shadowRadius": 1,
                    }
                  }
                  testID="card-container"
                >
                  <View
                    style={
                      [
                        {
                          "flexShrink": 1,
                        },
                        undefined,
                      ]
                    }
                    testID="card"
                  >
                    <View
                      borderRadiusStyles={
                        {
                          "borderRadius": 8,
                        }
                      }
                      style={
                        [
                          {
                            "paddingHorizontal": 16,
                          },
                          {
                            "paddingVertical": 16,
                          },
                          {
                            "alignItems": "center",
                            "flexDirection": "row",
                          },
                        ]
                      }
                    >
                      <View
                        style={
                          [
                            {
                              "overflow": "hidden",
                            },
                            {
                              "borderRadius": 25,
                              "height": 64,
                              "marginRight": 10,
                              "width": 64,
                            },
                          ]
                        }
                      >
                        <FastImageView
                          defaultSource={null}
                          resizeMode="contain"
                          source={
                            {
                              "priority": "normal",
                              "uri": "https://example.com/2.jpg",
                            }
                          }
                          style={
                            {
                              "bottom": 0,
                              "left": 0,
                              "position": "absolute",
                              "right": 0,
                              "top": 0,
                            }
                          }
                          testID="image-thumbnail-container"
                        />
                      </View>
                      <View
                        style={
                          {
                            "flex": 1,
                            "justifyContent": "center",
                          }
                        }
                      >
                        <Text>
                          Product 2
                        </Text>
                        <Text>
                          $
                          29.99
                        </Text>
                      </View>
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </View>
          <View
            onLayout={[Function]}
          />
        </View>
      </RCTScrollView>
    </View>
  </RCTSafeAreaView>
</View>
`;
